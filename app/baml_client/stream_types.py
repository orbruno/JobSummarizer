# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

import typing
import typing_extensions
from pydantic import BaseModel, ConfigDict

import baml_py

from . import types

StreamStateValueT = typing.TypeVar('StreamStateValueT')
class StreamState(BaseModel, typing.Generic[StreamStateValueT]):
    value: StreamStateValueT
    state: typing_extensions.Literal["Pending", "Incomplete", "Complete"]
# #########################################################################
# Generated classes (8)
# #########################################################################

class CompetenciesAndSkills(BaseModel):
    competency: typing.Optional[str] = None
    soft_skills: typing.List[str]
    hard_skills: typing.List[str]

class Competency(BaseModel):
    competency: typing.Optional[str] = None
    soft_skills: typing.List[str]
    hard_skills: typing.List[str]

class ContractDetails(BaseModel):
    type: typing.Optional[str] = None
    duration: typing.Optional[str] = None
    time_commitment: typing.Optional[str] = None
    work_mode: typing.Optional[str] = None

class EmploymentRecord(BaseModel):
    employer: typing.Optional[str] = None
    description: typing.Optional[str] = None
    positions: typing.List["JobPosition"]

class JobPosition(BaseModel):
    title: typing.Optional[str] = None
    description: typing.Optional[str] = None
    responsibilities: typing.List[str]

class JobPosting(BaseModel):
    title: typing.Optional[str] = None
    company: typing.Optional[str] = None
    location: typing.Optional[str] = None
    contract_details: typing.Optional["ContractDetails"] = None
    language_skills: typing.List["LanguageSkills"]
    description: typing.Optional[str] = None
    competencies_and_skills: typing.List["CompetenciesAndSkills"]
    roles: typing.List[str]
    recruiter_details: typing.Optional["RecruiterDetails"] = None
    posting_date: typing.Optional[str] = None
    application_deadline: typing.Optional[str] = None
    salary_range: typing.Optional[str] = None
    benefits: typing.List[str]

class LanguageSkills(BaseModel):
    english_level: typing.Optional[str] = None
    german_level: typing.Optional[str] = None
    language_of_posting: typing.Optional[str] = None
    languages: typing.Optional[str] = None

class RecruiterDetails(BaseModel):
    name: typing.Optional[str] = None
    email: typing.Optional[str] = None
    phone: typing.Optional[str] = None

# #########################################################################
# Generated type aliases (0)
# #########################################################################
